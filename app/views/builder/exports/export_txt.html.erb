<%
def clean_description(str)
	unless str.nil?
		str.gsub!(/(May\ become\ the\ |May\ take|May)/, '')
	end

	str
end
%>
<div class="popin">
	<h1>Export of the army list in TXT format</h1>
	<div id="export-txt-army-list">
		<p>“<%= @army_list.user.name %>” - <%= @army_list.army.name %> <%= "- #{@army_list.army_organisation.name}" if @army_list.army.army_organisations.size > 1 %></p>
		
		<% @army_list.army_organisation.organisation_groups.each do |organisation_group| %>
			<% army_list_organisation = @army_list.army_list_organisations.find_by(:organisation_id => organisation_group.organisation_id) %>
			<p>--- <%= raw organisation_group.organisation.name %>: 
				<% if army_list_organisation != nil %><%= sprintf('%.2f', army_list_organisation.rate) %>% 
					<% unless organisation_group.NoLimit? %>
					  / <%= organisation_group.target %>% <%= organisation_group.type_target %>
					<% end %> 
					(<%= army_list_organisation.pts %>pts<% if !organisation_group.NoLimit? %>/<%= (organisation_group.target.to_i * @army_list.max.to_i / 100.0).to_i %>pts<% end %>)
				<%else%>0%<%end%> 
			---</p>
		
			<% @army_list.army_list_units.each do |army_list_unit| %>
				<% if army_list_unit.unit.organisation_ids.first != organisation_group.organisation_id
					next
				end%>
				<p>
					<%= value_points army_list_unit.value_points %> - <%= "#{army_list_unit.size}x" if army_list_unit.size > 1 %> <strong><%= army_list_unit.unit.name %></strong>
					<% unless army_list_unit.unit_options.where(:category => :General).empty? %>
						, <%= t "activerecord.attributes.ninth_age_unit_option.category.General" %>
					<% end %>
					<% unless army_list_unit.extra_items.empty? %>
						, <%= army_list_unit.extra_items.map(&:name).join(', ') %>
					<% end %>
					<% unless army_list_unit.unit_options.where.not(:mount_id => nil).empty? %>
						, <%= army_list_unit.unit_options.where.not(:mount_id => nil).map(&:mount).map(&:name).join(', ') %>
					<% end %>
					<% unless army_list_unit.magic_items.empty? %>
						, <%= army_list_unit.magic_items.map(&:name).join(', ') %>
					<% end %>
					<% unless army_list_unit.unit_options.where.not(:category => [:BSB, :M, :S, :C, :MagicLvl, :General]).where(:domain_magic_id => nil).where(:mount_id => nil).empty? %>
						, <%= clean_description(army_list_unit.unit_options.where.not(:category => [:BSB, :M, :S, :C, :MagicLvl, :General])
																			.where(:domain_magic_id => nil)
																			.where(:mount_id => nil)
																			.map(&:name)
																			.join(', ')) %>
					<% end %>
					<% unless army_list_unit.unit_options.where(:category => :MagicLvl).empty? %>
						, <%= army_list_unit.unit_options.where(:category => :MagicLvl).map(&:name).join(', ') %>
					<% end %>
					<% unless army_list_unit.unit_options.where.not(:domain_magic_id => nil).map(&:domain_magic).empty? %>
						, <%= army_list_unit.unit_options.where.not(:domain_magic_id => nil).map(&:domain_magic).map(&:name).join(', ') %>
					<% end %>
					<% unless army_list_unit.unit_options.where(:category => [:BSB, :M, :S, :C]).empty? %>
						, <%= army_list_unit.unit_options.where(:category => [:BSB, :M, :S, :C])
															.map(&:category)
															.map{|c| c.to_s }
															.map{|c| I18n.t("activerecord.attributes.ninth_age_unit_option.category.#{c}", default: c.titleize) }
															.join(', ') %>
					<% end %>
					<% unless army_list_unit.magic_standards.empty? %>
						, <%= army_list_unit.magic_standards.map(&:name).join(', ') %>
					<% end %>
				</p>
			<% end %>
		<% end %>
		<p><%= value_points @army_list.value_points %></p>
	</div>
</div>
